{"ast":null,"code":"import { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/employee.service\";\nimport * as i2 from \"@angular/material/card\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/table\";\nimport * as i8 from \"@angular/material/paginator\";\n\nfunction SlotbookComponent_th_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 17);\n    i0.ɵɵtext(1, \" date \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction SlotbookComponent_td_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 18);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r7 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r7.date, \" \");\n  }\n}\n\nfunction SlotbookComponent_th_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 17);\n    i0.ɵɵtext(1, \" time \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction SlotbookComponent_td_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 18);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r8 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r8.time, \" \");\n  }\n}\n\nfunction SlotbookComponent_tr_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 19);\n  }\n}\n\nfunction SlotbookComponent_tr_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 20);\n  }\n}\n\nconst _c0 = function () {\n  return [5, 10, 20];\n};\n\nexport let SlotbookComponent = /*#__PURE__*/(() => {\n  class SlotbookComponent {\n    constructor(employeeService) {\n      this.employeeService = employeeService;\n      this.displayedColumns = ['date', 'time'];\n    }\n\n    tableLoad() {\n      this.employeeService.getSlotsById().subscribe(response => {\n        this.dataSource = new MatTableDataSource(response);\n        this.dataSource.paginator = this.paginator;\n      }, error => {\n        alert(error.message);\n      });\n    }\n\n    ngOnInit() {\n      //console.log(\"Date picker\")\n      this.tableLoad();\n    }\n\n    getData(data) {\n      data.date = JSON.stringify(data.date).substring(1, 11);\n      data.time = data.time.concat(\":00\");\n      this.data = data;\n      this.employeeService.addSlot(this.data).subscribe(response => {\n        this.response = response;\n        this.tableLoad();\n        alert(JSON.stringify(response));\n      }, error => {\n        alert(error.message);\n      });\n    }\n\n  }\n\n  SlotbookComponent.ɵfac = function SlotbookComponent_Factory(t) {\n    return new (t || SlotbookComponent)(i0.ɵɵdirectiveInject(i1.EmployeeService));\n  };\n\n  SlotbookComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SlotbookComponent,\n    selectors: [[\"app-slotbook\"]],\n    viewQuery: function SlotbookComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatPaginator, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginator = _t.first);\n      }\n    },\n    decls: 30,\n    vars: 5,\n    consts: [[2, \"color\", \"blue\"], [3, \"ngSubmit\"], [\"form\", \"ngForm\"], [\"type\", \"date\", \"ngModel\", \"\", \"name\", \"date\"], [\"appearance\", \"fill\"], [\"for\", \"exampleInput\"], [\"matInput\", \"\", \"type\", \"time\", \"placeholder\", \"HH:mm:ss\", \"ngModel\", \"\", \"name\", \"time\"], [\"mat-raised-button\", \"\", \"color\", \"accent\"], [1, \"mat-elevation-z8\"], [\"mat-table\", \"\", 3, \"dataSource\"], [\"matColumnDef\", \"date\"], [\"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"matColumnDef\", \"time\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", 4, \"matRowDef\", \"matRowDefColumns\"], [\"showFirstLastButtons\", \"\", \"aria-label\", \"Select page of periodic elements\", 3, \"pageSizeOptions\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\"]],\n    template: function SlotbookComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r10 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"mat-card\")(1, \"h1\", 0);\n        i0.ɵɵtext(2, \"Add Slot\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 1, 2);\n        i0.ɵɵlistener(\"ngSubmit\", function SlotbookComponent_Template_form_ngSubmit_3_listener() {\n          i0.ɵɵrestoreView(_r10);\n\n          const _r0 = i0.ɵɵreference(4);\n\n          return ctx.getData(_r0.value);\n        });\n        i0.ɵɵelementStart(5, \"b\");\n        i0.ɵɵtext(6, \"Date : \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(7, \"\\u00A0\\u00A0\");\n        i0.ɵɵelement(8, \"input\", 3)(9, \"br\")(10, \"br\");\n        i0.ɵɵelementStart(11, \"mat-form-field\", 4)(12, \"mat-label\", 5);\n        i0.ɵɵtext(13, \"Time\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"br\");\n        i0.ɵɵelementStart(16, \"button\", 7);\n        i0.ɵɵtext(17, \"Add\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(18, \"mat-card\")(19, \"div\", 8)(20, \"table\", 9);\n        i0.ɵɵelementContainerStart(21, 10);\n        i0.ɵɵtemplate(22, SlotbookComponent_th_22_Template, 2, 0, \"th\", 11);\n        i0.ɵɵtemplate(23, SlotbookComponent_td_23_Template, 2, 1, \"td\", 12);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(24, 13);\n        i0.ɵɵtemplate(25, SlotbookComponent_th_25_Template, 2, 0, \"th\", 11);\n        i0.ɵɵtemplate(26, SlotbookComponent_td_26_Template, 2, 1, \"td\", 12);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵtemplate(27, SlotbookComponent_tr_27_Template, 1, 0, \"tr\", 14);\n        i0.ɵɵtemplate(28, SlotbookComponent_tr_28_Template, 1, 0, \"tr\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(29, \"mat-paginator\", 16);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(20);\n        i0.ɵɵproperty(\"dataSource\", ctx.dataSource);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"matHeaderRowDef\", ctx.displayedColumns);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"matRowDefColumns\", ctx.displayedColumns);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"pageSizeOptions\", i0.ɵɵpureFunction0(4, _c0));\n      }\n    },\n    directives: [i2.MatCard, i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.NgForm, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i4.MatFormField, i4.MatLabel, i5.MatInput, i6.MatButton, i7.MatTable, i7.MatColumnDef, i7.MatHeaderCellDef, i7.MatHeaderCell, i7.MatCellDef, i7.MatCell, i7.MatHeaderRowDef, i7.MatHeaderRow, i7.MatRowDef, i7.MatRow, i8.MatPaginator],\n    styles: [\"table[_ngcontent-%COMP%]{width:100%}\"]\n  });\n  return SlotbookComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}