{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"src/app/services/download-csv.service\";\nimport * as i3 from \"src/app/panelist/viewskill/skills.service\";\nimport * as i4 from \"src/app/services/slot-list.service\";\nimport * as i5 from \"@angular/material/snack-bar\";\nimport * as i6 from \"src/app/employee.service\";\nimport * as i7 from \"src/app/services/candidate.service\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/button\";\nimport * as i10 from \"@angular/material/icon\";\nimport * as i11 from \"ngx-pagination\";\n\nfunction InterviewListComponent_tr_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \"{{employee.employeeName}\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"td\");\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const s_r1 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(s_r1.employeeEmail);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(s_r1.candidateName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(s_r1.candidateEmail);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(s_r1.date);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(s_r1.time);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(s_r1.round);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(s_r1.skills);\n  }\n}\n\nconst _c0 = function (a1) {\n  return {\n    itemsPerPage: 5,\n    currentPage: a1\n  };\n};\n\nexport let InterviewListComponent = /*#__PURE__*/(() => {\n  class InterviewListComponent {\n    constructor(datepipe, downloadCsvServive, skillService, slotListService, snackBar, empService, candidateService) {\n      this.datepipe = datepipe;\n      this.downloadCsvServive = downloadCsvServive;\n      this.skillService = skillService;\n      this.slotListService = slotListService;\n      this.snackBar = snackBar;\n      this.empService = empService;\n      this.candidateService = candidateService;\n      this.allSlots = [];\n      this.selectedSlots = [];\n      this.ProperSlots = [];\n      this.p = 1;\n      this.JsonArray = [];\n      this.date = new Date();\n      this.JsonFields = [\"employeeName\", \"employeeEmail\", \"candidateName\", \"candidateEmail\", \"date\", \"time\", \"round\", \"date\", \"skills\"];\n      this.listOfinterviews();\n    }\n\n    JsonToCSV() {\n      var csvStr = this.JsonFields.join(\",\") + \"\\n\";\n\n      for (var v of this.JsonArray) {\n        this.employeeName = v.employeeName;\n        this.employeeEmail = v.employeeEmail;\n        this.candidateName = v.candidateName;\n        this.candidateEmail = v.candidateEmail;\n        this.time = v.time;\n        this.round = v.round;\n        this.date = v.date; // this.skills = this.getSkillsByEmailId(v.employeeEmail);\n\n        let date_string = this.datepipe.transform(this.date, 'yyyy-MM-dd');\n        csvStr += this.employeeName + ',' + this.employeeEmail + ',' + this.candidateName + ',' + this.candidateEmail + ',' + date_string + ',' + this.time + ',' + this.round + ',' + this.skills + \"\\n\";\n      }\n\n      return csvStr;\n    }\n\n    downloadFile() {\n      console.log(this.JsonArray);\n      this.downloadfile(this.JsonToCSV()); //console.log(this.JsonArray);\n      //this.downloadfile(this.JsonToCSV())\n    }\n\n    ngOnInit() {\n      this.downloadCsvServive.downloadFile().subscribe(data => {\n        this.JsonArray = data;\n      });\n    }\n\n    downloadfile(csvStr) {\n      var hiddenElement = document.createElement('a');\n      hiddenElement.href = 'data:text/csv;charset=utf-8,' + encodeURI(csvStr);\n      hiddenElement.target = '_blank';\n      hiddenElement.download = 'output.csv';\n      hiddenElement.click();\n    }\n\n    getSkillsByEmailId(email) {\n      this.skillService.getSkillsByEmail(email).subscribe(response => {\n        this.skills = response;\n        console.log(this.skills);\n      }, error => {\n        alert(error.message);\n      });\n    }\n\n    getEmployee(id) {\n      this.empService.getEmployeebyId(id).subscribe(response => {\n        this.employee = response;\n      }, error => {\n        alert(error.message);\n      });\n    }\n\n    getEmployeeId(id) {\n      this.employee = this.empService.getEmployeebyId(id);\n      this.empEid = this.employee.employeeEmail;\n      return this.empEid;\n    }\n\n    getCandidateName(id) {\n      this.candidate = this.candidateService.getCandidateById(id);\n      this.empName = this.employee.employeeName;\n      return this.candidateName;\n    }\n\n    getCandidateID(id) {\n      this.candidate = this.candidateService.getCandidateById(id);\n      this.candidateEid = this.candidate.candidateEmail;\n      return this.candidateEid;\n    }\n\n    getSkills(id) {\n      this.skills = this.skillService.getSkillsbyEmpId(id);\n      return this.skills;\n    }\n\n    listOfinterviews() {\n      this.slotListService.getSlotList().subscribe(data => {\n        this.slots = data;\n\n        for (let i = 2; i < this.slots.length; i++) {\n          console.log(this.slots[i].empId);\n          this.getEmployee(this.slots[2].empId);\n          this.ProperSlots[i].employeeName = this.employee.name;\n          this.ProperSlots[i].employeeEmail = this.getEmployeeId(this.slots[2].empId);\n          this.ProperSlots[i].candidateName = this.getCandidateName(1);\n          this.ProperSlots[i].candidateEmail = this.getCandidateID(2);\n          this.ProperSlots[i].date = this.slots[i].date;\n          this.ProperSlots[i].time = this.slots[i].time;\n          this.ProperSlots[i].round = this.slots[i].round; // this.ProperSlots[i].skills = this.getSkills(this.slots[i].em);\n        }\n\n        console.log(this.ProperSlots);\n        this.allSlots = data;\n      }, error => {\n        alert(error.message);\n      });\n    }\n\n    getSlot() {\n      console.log(\"get slot working\");\n\n      if (this.empName != \"\" && this.empName != null) {\n        console.log(\"Inside empName\");\n\n        for (var slot of this.slots) {\n          // if(slot.employeeName.toLowerCase()===this.empName)\n          this.selectedSlots.push(slot);\n        }\n\n        if (this.selectedSlots.length > 0) {\n          this.slots = this.selectedSlots;\n        } else {\n          this.openSnackBar(\"No Records Found\", \"act\");\n        }\n      }\n\n      if (this.empName == \"\") {\n        this.slots = this.allSlots;\n      }\n    }\n\n    openSnackBar(message, action) {\n      this.snackBar.open(message, action, {\n        duration: 2000\n      });\n    }\n\n  }\n\n  InterviewListComponent.ɵfac = function InterviewListComponent_Factory(t) {\n    return new (t || InterviewListComponent)(i0.ɵɵdirectiveInject(i1.DatePipe), i0.ɵɵdirectiveInject(i2.DownloadCsvService), i0.ɵɵdirectiveInject(i3.SkillsService), i0.ɵɵdirectiveInject(i4.SlotListService), i0.ɵɵdirectiveInject(i5.MatSnackBar), i0.ɵɵdirectiveInject(i6.EmployeeService), i0.ɵɵdirectiveInject(i7.CandidateService));\n  };\n\n  InterviewListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: InterviewListComponent,\n    selectors: [[\"app-interview-list\"]],\n    decls: 45,\n    vars: 6,\n    consts: [[\"id\", \"show\", 1, \"container\"], [1, \"heading\", 2, \"text-align\", \"center\"], [1, \"input\"], [\"appearance\", \"outline\", \"color\", \"primary\", 1, \"input-field\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 1, \"search-btn\", 3, \"click\"], [\"aria-hidden\", \"false\", \"aria-label\", \"Example Search icon\"], [1, \"data\", \"feedbacks\"], [1, \"table-heading\"], [4, \"ngFor\", \"ngForOf\"], [3, \"pageChange\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 1, \"download\", 3, \"click\"]],\n    template: function InterviewListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵtext(2, \"All Interview Slots\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"table\", 2)(4, \"tr\")(5, \"td\")(6, \"mat-form-field\", 3)(7, \"mat-label\");\n        i0.ɵɵtext(8, \"Employee Name\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(9, \"td\")(10, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function InterviewListComponent_Template_button_click_10_listener() {\n          return ctx.getSlot();\n        });\n        i0.ɵɵtext(11, \" Search \");\n        i0.ɵɵelementStart(12, \"mat-icon\", 5);\n        i0.ɵɵtext(13, \"search\");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(14, \"table\", 6)(15, \"thead\", 7)(16, \"tr\")(17, \"th\")(18, \"h2\");\n        i0.ɵɵtext(19, \"Employee Name\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(20, \"th\")(21, \"h2\");\n        i0.ɵɵtext(22, \"Employee Email\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(23, \"th\")(24, \"h2\");\n        i0.ɵɵtext(25, \"Candidate Name\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(26, \"th\")(27, \"h2\");\n        i0.ɵɵtext(28, \"Candidate Email\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(29, \"th\")(30, \"h2\");\n        i0.ɵɵtext(31, \"Date\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(32, \"th\")(33, \"h2\");\n        i0.ɵɵtext(34, \"Time\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(35, \"th\")(36, \"h2\");\n        i0.ɵɵtext(37, \"Round\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(38, \"tbody\");\n        i0.ɵɵtemplate(39, InterviewListComponent_tr_39_Template, 17, 7, \"tr\", 8);\n        i0.ɵɵpipe(40, \"paginate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(41, \"div\")(42, \"pagination-controls\", 9);\n        i0.ɵɵlistener(\"pageChange\", function InterviewListComponent_Template_pagination_controls_pageChange_42_listener($event) {\n          return ctx.p = $event;\n        });\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(43, \"button\", 10);\n        i0.ɵɵlistener(\"click\", function InterviewListComponent_Template_button_click_43_listener() {\n          return ctx.downloadFile();\n        });\n        i0.ɵɵtext(44, \" Download\\n\");\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(39);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind2(40, 1, ctx.slots, i0.ɵɵpureFunction1(4, _c0, ctx.p)));\n      }\n    },\n    directives: [i8.MatFormField, i8.MatLabel, i9.MatButton, i10.MatIcon, i1.NgForOf, i11.PaginationControlsComponent],\n    pipes: [i11.PaginatePipe],\n    styles: [\".table[_ngcontent-%COMP%]{background-color:#e3eaec;font-size:large}#show[_ngcontent-%COMP%]{margin-left:15%}button[_ngcontent-%COMP%]{margin-left:30%}body[_ngcontent-%COMP%]{text-align:center;display:inline-block;background-color:#f5f5f5}.heading[_ngcontent-%COMP%]{color:#007bff;font-size:2.5rem;font-weight:700;margin:70px 0 30px}.feedbacks[_ngcontent-%COMP%]   td[_ngcontent-%COMP%], .feedbacks[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{border:1px solid #ddd;padding:8px}.feedbacks[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(even){background-color:#f2f2f2}.data[_ngcontent-%COMP%]{width:100%;margin-left:50px}.feedbacks[_ngcontent-%COMP%]{border-collapse:\\\"collapse\\\";width:100%}.table-heading[_ngcontent-%COMP%]{padding-top:12px;padding-bottom:12px;text-align:left;background-color:#007bff;color:#fff}.input[_ngcontent-%COMP%]{margin:20px auto;color:#000}.search-btn[_ngcontent-%COMP%]{margin-left:10px;margin-bottom:3px;background-color:#007bff}.download[_ngcontent-%COMP%]{margin-left:38%;margin-bottom:3px;background-color:#007bff}\"]\n  });\n  return InterviewListComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}