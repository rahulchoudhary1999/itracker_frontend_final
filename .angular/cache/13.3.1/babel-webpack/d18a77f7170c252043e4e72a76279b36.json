{"ast":null,"code":"import { ScheduledInterviews } from 'src/app/entities/scheduled-interviews';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/slot-list.service\";\nimport * as i2 from \"src/app/services/employee.service\";\nimport * as i3 from \"src/app/services/candidate.service\";\nimport * as i4 from \"src/app/services/scheduled-interview.service\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/common\";\nexport let ScheduleInterviewComponent = /*#__PURE__*/(() => {\n  class ScheduleInterviewComponent {\n    constructor(slotsService, employeeservice, candidateService, InterviewService) {\n      this.slotsService = slotsService;\n      this.employeeservice = employeeservice;\n      this.candidateService = candidateService;\n      this.InterviewService = InterviewService;\n      this.interview = new ScheduledInterviews();\n      this.flg = false;\n      this.currentDate = new Date();\n    }\n\n    ngOnInit() {}\n\n    validate() {\n      if (this.interview.candidateId == null || this.interview.empId == null) return false;\n      return true;\n    }\n\n    checkinterview() {\n      console.log(this.interview.candidateId, this.interview.date);\n      this.InterviewService.getScheduledinterviewsByCid(this.interview.candidateId).subscribe(data => {\n        this.list = data;\n\n        for (var sch of this.list) {\n          if (sch.candidateId == this.interview.candidateId && sch.date == this.interview.date) {\n            alert(\"Interview already scheduled!\");\n            this.flg = true;\n            break;\n          }\n        }\n      });\n    }\n\n    getCandidate() {\n      this.candidateService.getCandidateByEmail(this.candidateEmail).subscribe(data => {\n        this.candidate = data;\n\n        if (this.candidate == null) {\n          alert(\"Candidate With This Email Doesn't Exist\");\n          return;\n        }\n\n        this.interview.candidateId = this.candidate.candidateID;\n        this.candidateId = this.interview.candidateId;\n        this.getEmployee();\n      });\n    }\n\n    getEmployee() {\n      this.employeeservice.getEmployeeByEmail(this.employeeEmail).subscribe(data => {\n        this.employee = data;\n        this.interview.empId = this.employee.empId;\n        this.employeeId = this.interview.empId;\n        console.log(\"in\", this.interview.empId);\n        this.addinterview();\n      });\n    }\n\n    addinterview() {\n      //this.checkinterview();\n      this.interview.round = \"R1\";\n\n      if (this.candidateEmail == null || this.employeeEmail == null || this.interview.date == null || this.interview.time == null) {\n        alert(\"Please Fill Out All The Fields\");\n        return;\n      }\n\n      this.candidateService.getCandidateByEmail(this.candidateEmail).subscribe(data => {\n        this.candidate = data;\n        this.interview.candidateId = this.candidate.candidateID;\n        this.candidateId = this.interview.candidateId;\n        console.log(\"in\", this.interview.candidateId);\n      });\n      this.employeeservice.getEmployeeByEmail(this.employeeEmail).subscribe(data => {\n        this.employee = data;\n        this.interview.empId = this.employee.empId;\n        this.employeeId = this.interview.empId;\n        console.log(\"in\", this.interview.empId);\n      });\n      /*\r\n      this.slotsService.getSlotList().subscribe(\r\n        data => {\r\n          this.slots = data;\r\n          //code here\r\n          for(var sch of this.slots){\r\n            if(sch.candidateEmail == this.candidateEmail)\r\n            {\r\n              this.flg=true;\r\n            alert(\"Interview already scheduled!\");\r\n            \r\n            return;\r\n            }\r\n          }\r\n        }\r\n      )\r\n      */\n      //console.log(this.interview.date,this.interview.time,this.candidateEmail,this.employeeEmail);\n\n      const app = document.getElementById(\"show_success\");\n      const p = document.createElement(\"h2\");\n      p.textContent = \"Slot Added Successfully!\";\n      if (this.flg == false) app === null || app === void 0 ? void 0 : app.appendChild(p);\n      this.InterviewService.addScheduledinterviews(this.interview).subscribe(error => this.errormsg = error);\n    }\n\n  }\n\n  ScheduleInterviewComponent.ɵfac = function ScheduleInterviewComponent_Factory(t) {\n    return new (t || ScheduleInterviewComponent)(i0.ɵɵdirectiveInject(i1.SlotListService), i0.ɵɵdirectiveInject(i2.EmployeeService), i0.ɵɵdirectiveInject(i3.CandidateService), i0.ɵɵdirectiveInject(i4.ScheduledInterviewService));\n  };\n\n  ScheduleInterviewComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ScheduleInterviewComponent,\n    selectors: [[\"app-schedule-interview\"]],\n    decls: 40,\n    vars: 8,\n    consts: [[1, \"container\"], [1, \"row\", \"justify-content-center\", \"align-items-center\"], [1, \"col-md-6\"], [1, \"col-md-12\"], [1, \"form-group\"], [\"type\", \"email\", \"id\", \"candidateemail\", \"name\", \"candidateemail\", \"placeholder\", \"Enter Candidate Email\", \"required\", \"\", \"minlength\", \"1\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"input1\", \"\"], [\"type\", \"email\", \"id\", \"empemail\", \"name\", \"empemail\", \"placeholder\", \"Enter Employee Email\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"input2\", \"\"], [\"type\", \"date\", \"id\", \"date\", \"name\", \"date\", 1, \"form-control\", 3, \"min\", \"ngModel\", \"ngModelChange\"], [\"input3\", \"\"], [\"type\", \"time\", \"step\", \"1\", \"id\", \"time\", \"name\", \"time\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"input4\", \"\"], [\"type\", \"submit\", 1, \"button\", 3, \"click\"], [\"id\", \"show_success\"]],\n    template: function ScheduleInterviewComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"body\")(1, \"div\")(2, \"div\", 0)(3, \"div\", 1)(4, \"div\", 2)(5, \"div\", 3)(6, \"form\")(7, \"div\")(8, \"h1\");\n        i0.ɵɵtext(9, \" Schedule an Interview\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"div\", 4)(11, \"label\")(12, \"h2\");\n        i0.ɵɵtext(13, \"Enter Candidate Email \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"input\", 5, 6);\n        i0.ɵɵlistener(\"ngModelChange\", function ScheduleInterviewComponent_Template_input_ngModelChange_14_listener($event) {\n          return ctx.candidateEmail = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"div\", 4)(17, \"label\")(18, \"h2\");\n        i0.ɵɵtext(19, \"Enter Employee Email\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(20, \"input\", 7, 8);\n        i0.ɵɵlistener(\"ngModelChange\", function ScheduleInterviewComponent_Template_input_ngModelChange_20_listener($event) {\n          return ctx.employeeEmail = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(22, \"div\", 4)(23, \"label\")(24, \"h2\");\n        i0.ɵɵtext(25, \"Select Date\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(26, \"input\", 9, 10);\n        i0.ɵɵlistener(\"ngModelChange\", function ScheduleInterviewComponent_Template_input_ngModelChange_26_listener($event) {\n          return ctx.interview.date = $event;\n        });\n        i0.ɵɵpipe(28, \"date\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(29, \"div\", 4)(30, \"label\")(31, \"h2\");\n        i0.ɵɵtext(32, \"Select Time\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(33, \"input\", 11, 12);\n        i0.ɵɵlistener(\"ngModelChange\", function ScheduleInterviewComponent_Template_input_ngModelChange_33_listener($event) {\n          return ctx.interview.time = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(35, \"p\");\n        i0.ɵɵelementStart(36, \"h1\")(37, \"button\", 13);\n        i0.ɵɵlistener(\"click\", function ScheduleInterviewComponent_Template_button_click_37_listener() {\n          return ctx.getCandidate();\n        });\n        i0.ɵɵtext(38, \"Schedule\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(39, \"p\", 14);\n        i0.ɵɵelementEnd()()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(14);\n        i0.ɵɵproperty(\"ngModel\", ctx.candidateEmail);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.employeeEmail);\n        i0.ɵɵadvance(6);\n        i0.ɵɵpropertyInterpolate(\"min\", i0.ɵɵpipeBind2(28, 5, ctx.currentDate, \"yyyy-MM-dd\"));\n        i0.ɵɵproperty(\"ngModel\", ctx.interview.date);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.interview.time);\n      }\n    },\n    directives: [i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.NgForm, i5.DefaultValueAccessor, i5.RequiredValidator, i5.MinLengthValidator, i5.NgControlStatus, i5.NgModel],\n    pipes: [i6.DatePipe],\n    styles: [\"body[_ngcontent-%COMP%]{margin-left:15%;width:70%}form[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{background:lightgray;color:#042331}\"]\n  });\n  return ScheduleInterviewComponent;\n})();\n\nfunction checkinterview() {\n  throw new Error('Function not implemented.');\n}","map":null,"metadata":{},"sourceType":"module"}